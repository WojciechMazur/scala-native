--- scalalib/target/scalaSources/2.12.13/scala/collection/mutable/ArraySeq.scala	2021-01-12 14:37:36.000000000 +0100
+++ scalalib/overrides-2.12/scala/collection/mutable/ArraySeq.scala	2021-02-26 16:43:39.138508299 +0100
@@ -105,9 +105,14 @@
  *  @define Coll `ArraySeq`
  */
 object ArraySeq extends SeqFactory[ArraySeq] {
+  @inline override def ReusableCBF: GenericCanBuildFrom[Nothing] = ReusableCBFInstance
+  private object ReusableCBFInstance extends GenericCanBuildFrom[Nothing] {
+    @inline override def apply() = newBuilder[Nothing]
+  }
+
   /** $genericCanBuildFromInfo */
-  implicit def canBuildFrom[A]: CanBuildFrom[Coll, A, ArraySeq[A]] = ReusableCBF.asInstanceOf[GenericCanBuildFrom[A]]
-  def newBuilder[A]: Builder[A, ArraySeq[A]] =
+  @inline implicit def canBuildFrom[A]: CanBuildFrom[Coll, A, ArraySeq[A]] = ReusableCBF.asInstanceOf[GenericCanBuildFrom[A]]
+  @inline def newBuilder[A]: Builder[A, ArraySeq[A]] =
     new ArrayBuffer[A] mapResult { buf =>
       val result = new ArraySeq[A](buf.length)
       buf.copyToArray(result.array.asInstanceOf[Array[Any]], 0)
