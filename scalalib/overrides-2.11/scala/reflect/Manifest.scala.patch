--- scalalib/target/scalaSources/2.11.12/scala/reflect/Manifest.scala	2017-11-03 00:26:48.000000000 +0100
+++ scalalib/overrides-2.11/scala/reflect/Manifest.scala	2021-02-20 13:48:42.791398765 +0100
@@ -90,3 +90,19 @@
 
-  val Byte: AnyValManifest[Byte] = new AnyValManifest[scala.Byte]("Byte") {
+  @inline def Byte: AnyValManifest[Byte] = ByteManifest
+  @inline def Short: AnyValManifest[Short] = ShortManifest
+  @inline def Char: AnyValManifest[Char] = CharManifest
+  @inline def Int: AnyValManifest[Int] = IntManifest
+  @inline def Long: AnyValManifest[Long] = LongManifest
+  @inline def Float: AnyValManifest[Float] = FloatManifest
+  @inline def Double: AnyValManifest[Double] = DoubleManifest
+  @inline def Boolean: AnyValManifest[Boolean] = BooleanManifest
+  @inline def Unit: AnyValManifest[Unit] = UnitManifest
+  @inline def Any: Manifest[scala.Any] = AnyManifest
+  @inline def Object: Manifest[java.lang.Object] = ObjectManifest
+  @inline def AnyRef: Manifest[scala.AnyRef] = Object.asInstanceOf[Manifest[scala.AnyRef]]
+  @inline def AnyVal: Manifest[scala.AnyVal] = AnyValManifest
+  @inline def Null: Manifest[scala.Null] = NullManifest
+  @inline def Nothing: Manifest[scala.Nothing] = NothingManifest
+
+  private object ByteManifest extends AnyValManifest[scala.Byte]("Byte") {
     def runtimeClass = java.lang.Byte.TYPE
@@ -98,3 +114,3 @@
 
-  val Short: AnyValManifest[Short] = new AnyValManifest[scala.Short]("Short") {
+  private object ShortManifest extends AnyValManifest[scala.Short]("Short") {
     def runtimeClass = java.lang.Short.TYPE
@@ -106,3 +122,3 @@
 
-  val Char: AnyValManifest[Char] = new AnyValManifest[scala.Char]("Char") {
+  private object CharManifest extends AnyValManifest[scala.Char]("Char") {
     def runtimeClass = java.lang.Character.TYPE
@@ -114,3 +130,3 @@
 
-  val Int: AnyValManifest[Int] = new AnyValManifest[scala.Int]("Int") {
+  private object IntManifest extends AnyValManifest[scala.Int]("Int") {
     def runtimeClass = java.lang.Integer.TYPE
@@ -122,3 +138,3 @@
 
-  val Long: AnyValManifest[Long] = new AnyValManifest[scala.Long]("Long") {
+  private object LongManifest extends AnyValManifest[scala.Long]("Long") {
     def runtimeClass = java.lang.Long.TYPE
@@ -130,3 +146,3 @@
 
-  val Float: AnyValManifest[Float] = new AnyValManifest[scala.Float]("Float") {
+  private object FloatManifest extends AnyValManifest[scala.Float]("Float") {
     def runtimeClass = java.lang.Float.TYPE
@@ -138,3 +154,3 @@
 
-  val Double: AnyValManifest[Double] = new AnyValManifest[scala.Double]("Double") {
+  private object DoubleManifest extends AnyValManifest[scala.Double]("Double") {
     def runtimeClass = java.lang.Double.TYPE
@@ -146,3 +162,3 @@
 
-  val Boolean: AnyValManifest[Boolean] = new AnyValManifest[scala.Boolean]("Boolean") {
+  private object BooleanManifest extends AnyValManifest[scala.Boolean]("Boolean") {
     def runtimeClass = java.lang.Boolean.TYPE
@@ -154,3 +170,3 @@
 
-  val Unit: AnyValManifest[Unit] = new AnyValManifest[scala.Unit]("Unit") {
+  private object UnitManifest extends AnyValManifest[scala.Unit]("Unit") {
     def runtimeClass = java.lang.Void.TYPE
@@ -165,7 +181,7 @@
 
-  private val ObjectTYPE = classOf[java.lang.Object]
-  private val NothingTYPE = classOf[scala.runtime.Nothing$]
-  private val NullTYPE = classOf[scala.runtime.Null$]
+  @inline private def ObjectTYPE = classOf[java.lang.Object]
+  @inline private def NothingTYPE = classOf[scala.runtime.Nothing$]
+  @inline private def NullTYPE = classOf[scala.runtime.Null$]
 
-  val Any: Manifest[scala.Any] = new PhantomManifest[scala.Any](ObjectTYPE, "Any") {
+  private object AnyManifest extends PhantomManifest[scala.Any](ObjectTYPE, "Any") {
     override def newArray(len: Int) = new Array[scala.Any](len)
@@ -175,3 +191,3 @@
 
-  val Object: Manifest[java.lang.Object] = new PhantomManifest[java.lang.Object](ObjectTYPE, "Object") {
+  private object ObjectManifest extends PhantomManifest[java.lang.Object](ObjectTYPE, "Object") {
     override def newArray(len: Int) = new Array[java.lang.Object](len)
@@ -181,5 +197,3 @@
 
-  val AnyRef: Manifest[scala.AnyRef] = Object.asInstanceOf[Manifest[scala.AnyRef]]
-
-  val AnyVal: Manifest[scala.AnyVal] = new PhantomManifest[scala.AnyVal](ObjectTYPE, "AnyVal") {
+  private object AnyValManifest extends PhantomManifest[scala.AnyVal](ObjectTYPE, "AnyVal") {
     override def newArray(len: Int) = new Array[scala.AnyVal](len)
@@ -189,3 +203,3 @@
 
-  val Null: Manifest[scala.Null] = new PhantomManifest[scala.Null](NullTYPE, "Null") {
+  private object NullManifest extends PhantomManifest[scala.Null](NullTYPE, "Null") {
     override def newArray(len: Int) = new Array[scala.Null](len)
@@ -196,3 +210,3 @@
 
-  val Nothing: Manifest[scala.Nothing] = new PhantomManifest[scala.Nothing](NothingTYPE, "Nothing") {
+  private object NothingManifest extends PhantomManifest[scala.Nothing](NothingTYPE, "Nothing") {
     override def newArray(len: Int) = new Array[scala.Nothing](len)
