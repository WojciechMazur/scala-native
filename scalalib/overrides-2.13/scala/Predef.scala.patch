--- 2.13.6/scala/Predef.scala
+++ overrides-2.13/scala/Predef.scala
@@ -162,1 +162,1 @@
-  val Map         = immutable.Map
+  @inline def Map = immutable.Map
@@ -164,1 +164,1 @@
-  val Set         = immutable.Set
+  @inline def Set = immutable.Set
@@ -166,2 +166,1 @@
-  /**
-   * Allows destructuring tuples with the same syntax as constructing them.
+  /**   * Allows destructuring tuples with the same syntax as constructing them.
@@ -171,2 +170,1 @@
-   *
-   * val c = tup match {
+   *   * val c = tup match {
@@ -176,2 +174,1 @@
-   * @group aliases
-   */
+   * @group aliases   */
@@ -181,2 +178,1 @@
-  // TODO undeprecated until Scala reflection becomes non-experimental
-  // @deprecated("this notion doesn't have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.", "2.10.0")
+  // TODO undeprecated until Scala reflection becomes non-experimental  // @deprecated("this notion doesn't have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.", "2.10.0")
@@ -190,1 +186,1 @@
-  val Manifest          = scala.reflect.Manifest
+  @inline def Manifest  = scala.reflect.Manifest
@@ -193,1 +189,1 @@
-  val NoManifest        = scala.reflect.NoManifest
+  @inline def NoManifest = scala.reflect.NoManifest
@@ -195,2 +191,1 @@
-  // TODO undeprecated until Scala reflection becomes non-experimental
-  // @deprecated("use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead", "2.10.0")
+  // TODO undeprecated until Scala reflection becomes non-experimental  // @deprecated("use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead", "2.10.0")
@@ -201,1 +196,0 @@
-
@@ -205,2 +199,1 @@
-   * A method that returns its input value.
-   * @tparam A type of the input value x.
+   * A method that returns its input value.   * @tparam A type of the input value x.
@@ -211,1 +204,0 @@
-
@@ -215,2 +207,1 @@
-   *  @return the implicit value of type `T`
-   *  @group utilities
+   *  @return the implicit value of type `T`   *  @group utilities
@@ -220,2 +211,1 @@
-  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.
-   *  This is just a different name for [[identity]].
+  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.   *  This is just a different name for [[identity]].
