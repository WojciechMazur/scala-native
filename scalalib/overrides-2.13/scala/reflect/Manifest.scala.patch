@@ -318,59 +318,8 @@
 ct%0A%0A
-import scala.annotation.%7BimplicitNotFound, nowarn%7D%0A
 impo
@@ -1657,95 +1657,25 @@
 */%0A@
-nowarn(%22%22%22cat=deprecation&origin=scala%5C.reflect%5C.ClassManifest(DeprecatedApis.*)?%22%22%22)%0A@
+scala.annotation.
 impl
@@ -2106,36 +2106,33 @@
 est%5BArray%5BT%5D%5D =%0A
-    
+%09
 Manifest.classTy
@@ -2231,36 +2231,33 @@
  = that match %7B%0A
-    
+%09
 case _: Manifest
@@ -2262,36 +2262,33 @@
 st%5B_%5D   =%3E true%0A
-    
+%09
 case _          
@@ -2490,28 +2490,25 @@
 hat match %7B%0A
-    
+%09
 case m: Mani
@@ -2609,20 +2609,17 @@
 %3C this)%0A
-    
+%09
 case _  
@@ -3393,28 +3393,25 @@
 ifest%5B_%5D%5D =%0A
-    
+%09
 ManifestFact
@@ -3432,19 +3432,27 @@
 ests%0A%0A  
-val
+@inline def
  Byte: M
@@ -3504,19 +3504,27 @@
 .Byte%0A  
-val
+@inline def
  Short: 
@@ -3579,19 +3579,27 @@
 Short%0A  
-val
+@inline def
  Char: M
@@ -3651,19 +3651,27 @@
 .Char%0A  
-val
+@inline def
  Int: Ma
@@ -3720,19 +3720,27 @@
 y.Int%0A  
-val
+@inline def
  Long: M
@@ -3792,19 +3792,27 @@
 .Long%0A  
-val
+@inline def
  Float: 
@@ -3867,19 +3867,27 @@
 Float%0A  
-val
+@inline def
  Double:
@@ -3945,19 +3945,27 @@
 ouble%0A  
-val
+@inline def
  Boolean
@@ -4026,19 +4026,27 @@
 olean%0A  
-val
+@inline def
  Unit: M
@@ -4095,27 +4095,35 @@
 ory.Unit%0A%0A  
-val
+@inline def
  Any: Manife
@@ -4160,19 +4160,27 @@
 y.Any%0A  
-val
+@inline def
  Object:
@@ -4234,19 +4234,27 @@
 bject%0A  
-val
+@inline def
  AnyRef:
@@ -4304,19 +4304,27 @@
 nyRef%0A  
-val
+@inline def
  AnyVal:
@@ -4374,19 +4374,27 @@
 nyVal%0A  
-val
+@inline def
  Null: M
@@ -4438,19 +4438,27 @@
 .Null%0A  
-val
+@inline def
  Nothing
@@ -4617,36 +4617,33 @@
 : Manifest%5BT%5D =%0A
-    
+%09
 ManifestFactory.
@@ -4725,33 +4725,32 @@
 e %60clazz%60 is%0A   
- 
 * a top-level or
@@ -4756,33 +4756,32 @@
 r static class.%0A
- 
    * @note This 
@@ -4824,33 +4824,32 @@
 rate because we%0A
- 
    *       it's 
@@ -4891,33 +4891,32 @@
 tself. If we%0A   
- 
 *       pass var
@@ -4972,33 +4972,32 @@
 cursive call%0A   
- 
 *       to boxAr
@@ -5045,33 +5045,32 @@
 more efficient)%0A
- 
    */%0A  def clas
@@ -5109,36 +5109,33 @@
 : Manifest%5BT%5D =%0A
-    
+%09
 ManifestFactory.
@@ -5210,33 +5210,32 @@
 e %60clazz%60 is%0A   
- 
 * a top-level or
@@ -5373,36 +5373,33 @@
 : Manifest%5BT%5D =%0A
-    
+%09
 ManifestFactory.
@@ -5496,33 +5496,32 @@
 e %60clazz%60 is%0A   
- 
 * a class with n
@@ -5571,33 +5571,32 @@
 guments %60args%60.%0A
- 
    */%0A  def clas
@@ -5676,36 +5676,33 @@
 : Manifest%5BT%5D =%0A
-    
+%09
 ManifestFactory.
@@ -5795,28 +5795,25 @@
 Array%5BT%5D%5D =%0A
-    
+%09
 ManifestFact
@@ -5904,33 +5904,32 @@
 ound%60 is not%0A   
- 
 * strictly neces
@@ -5971,33 +5971,32 @@
 lection. It was%0A
- 
    * added so th
@@ -6160,36 +6160,33 @@
 : Manifest%5BT%5D =%0A
-    
+%09
 ManifestFactory.
@@ -6389,36 +6389,33 @@
 : Manifest%5BT%5D =%0A
-    
+%09
 ManifestFactory.
@@ -6600,20 +6600,17 @@
 st%5BT%5D =%0A
-    
+%09
 Manifest
@@ -6828,95 +6828,8 @@
 0%22)%0A
-@nowarn(%22%22%22cat=deprecation&origin=scala%5C.reflect%5C.ClassManifest(DeprecatedApis.*)?%22%22%22)%0A
 @Ser
@@ -7008,20 +7008,17 @@
 olean =%0A
-    
+%09
 (that eq
@@ -7131,20 +7131,17 @@
 match %7B%0A
-    
+%09
 case _: 
@@ -7166,20 +7166,17 @@
 =%3E true%0A
-    
+%09
 case _  
@@ -7773,95 +7773,8 @@
  */%0A
-@nowarn(%22%22%22cat=deprecation&origin=scala%5C.reflect%5C.ClassManifest(DeprecatedApis.*)?%22%22%22)%0A
 obje
@@ -7842,20 +7842,17 @@
 t%5B_%5D%5D =%0A
-    
+%09
 List(Byt
@@ -7927,38 +7927,32 @@
 ersionUID(1L)%0A  
-final 
 private%5Breflect%5D
@@ -8012,28 +8012,25 @@
 %5D(%22Byte%22) %7B%0A
-    
+%09
 def runtimeC
@@ -8052,28 +8052,25 @@
 g.Byte.TYPE%0A
-    
+%09
 @inline over
@@ -8125,36 +8125,33 @@
 rray%5BByte%5D(len)%0A
-    
+%09
 override def new
@@ -8225,36 +8225,33 @@
 ray%5BByte%5D(len))%0A
-    
+%09
 override def new
@@ -8313,20 +8313,17 @@
 fByte()%0A
-    
+%09
 override
@@ -8357,28 +8357,25 @@
 n%5BByte%5D = %7B%0A
-    
+%09
   x match %7B%0A
@@ -8370,32 +8370,26 @@
   x match %7B%0A
-        
+%09%09
 case d: Byte
@@ -8396,32 +8396,26 @@
  =%3E Some(d)%0A
-        
+%09%09
 case _ =%3E No
@@ -8417,34 +8417,25 @@
 =%3E None%0A
-      %7D%0A    %7D%0A    
+%09  %7D%0A%09%7D%0A%09
 private 
@@ -8483,36 +8483,83 @@
 %7D%0A  
-val Byte: ByteManifest = new
+private object ByteManifest extends ByteManifest%0A  def Byte: ByteManifest =
  Byt
@@ -8587,38 +8587,32 @@
 ersionUID(1L)%0A  
-final 
 private%5Breflect%5D
@@ -8675,28 +8675,25 @@
 (%22Short%22) %7B%0A
-    
+%09
 def runtimeC
@@ -8716,28 +8716,25 @@
 .Short.TYPE%0A
-    
+%09
 @inline over
@@ -8791,36 +8791,33 @@
 ray%5BShort%5D(len)%0A
-    
+%09
 override def new
@@ -8894,36 +8894,33 @@
 ay%5BShort%5D(len))%0A
-    
+%09
 override def new
@@ -8980,28 +8980,25 @@
 r.ofShort()%0A
-    
+%09
 override def
@@ -9029,28 +9029,25 @@
 %5BShort%5D = %7B%0A
-    
+%09
   x match %7B%0A
@@ -9042,32 +9042,26 @@
   x match %7B%0A
-        
+%09%09
 case d: Shor
@@ -9069,32 +9069,26 @@
  =%3E Some(d)%0A
-        
+%09%09
 case _ =%3E No
@@ -9090,34 +9090,25 @@
 =%3E None%0A
-      %7D%0A    %7D%0A    
+%09  %7D%0A%09%7D%0A%09
 private 
@@ -9157,38 +9157,87 @@
 %7D%0A  
-val Short: ShortManifest = new
+private object ShortManifest extends ShortManifest%0A  def Short: ShortManifest =
  Sho
@@ -9266,38 +9266,32 @@
 ersionUID(1L)%0A  
-final 
 private%5Breflect%5D
@@ -9351,28 +9351,25 @@
 %5D(%22Char%22) %7B%0A
-    
+%09
 def runtimeC
@@ -9392,36 +9392,33 @@
 .Character.TYPE%0A
-    
+%09
 @inline override
@@ -9473,28 +9473,25 @@
 %5BChar%5D(len)%0A
-    
+%09
 override def
@@ -9569,36 +9569,33 @@
 ray%5BChar%5D(len))%0A
-    
+%09
 override def new
@@ -9657,20 +9657,17 @@
 fChar()%0A
-    
+%09
 override
@@ -9701,28 +9701,25 @@
 n%5BChar%5D = %7B%0A
-    
+%09
   x match %7B%0A
@@ -9714,32 +9714,26 @@
   x match %7B%0A
-        
+%09%09
 case d: Char
@@ -9740,32 +9740,26 @@
  =%3E Some(d)%0A
-        
+%09%09
 case _ =%3E No
@@ -9761,34 +9761,25 @@
 =%3E None%0A
-   
+%09
   
- 
 %7D%0A
-    %7D%0A    
+%09%7D%0A%09
 private 
@@ -9827,36 +9827,83 @@
 %7D%0A  
-val Char: CharManifest = new
+private object CharManifest extends CharManifest%0A  def Char: CharManifest =
  Cha
@@ -9931,38 +9931,32 @@
 ersionUID(1L)%0A  
-final 
 private%5Breflect%5D
@@ -10013,28 +10013,25 @@
 t%5D(%22Int%22) %7B%0A
-    
+%09
 def runtimeC
@@ -10056,28 +10056,25 @@
 nteger.TYPE%0A
-    
+%09
 @inline over
@@ -10127,36 +10127,33 @@
 Array%5BInt%5D(len)%0A
-    
+%09
 override def new
@@ -10224,36 +10224,33 @@
 rray%5BInt%5D(len))%0A
-    
+%09
 override def new
@@ -10306,28 +10306,25 @@
 der.ofInt()%0A
-    
+%09
 override def
@@ -10353,28 +10353,25 @@
 on%5BInt%5D = %7B%0A
-    
+%09
   x match %7B%0A
@@ -10366,32 +10366,26 @@
   x match %7B%0A
-        
+%09%09
 case d: Int 
@@ -10391,32 +10391,26 @@
  =%3E Some(d)%0A
-        
+%09%09
 case _ =%3E No
@@ -10412,34 +10412,25 @@
 =%3E None%0A
-      %7D%0A    %7D%0A    
+%09  %7D%0A%09%7D%0A%09
 private 
@@ -10477,34 +10477,79 @@
 %7D%0A  
-val Int: IntManifest = new
+private object IntManifest extends IntManifest%0A  def Int: IntManifest =
  Int
@@ -10576,38 +10576,32 @@
 ersionUID(1L)%0A  
-final 
 private%5Breflect%5D
@@ -10661,28 +10661,25 @@
 %5D(%22Long%22) %7B%0A
-    
+%09
 def runtimeC
@@ -10701,28 +10701,25 @@
 g.Long.TYPE%0A
-    
+%09
 @inline over
@@ -10774,36 +10774,33 @@
 rray%5BLong%5D(len)%0A
-    
+%09
 override def new
@@ -10874,36 +10874,33 @@
 ray%5BLong%5D(len))%0A
-    
+%09
 override def new
@@ -10962,20 +10962,17 @@
 fLong()%0A
-    
+%09
 override
@@ -11006,28 +11006,25 @@
 n%5BLong%5D = %7B%0A
-    
+%09
   x match %7B%0A
@@ -11019,32 +11019,26 @@
   x match %7B%0A
-        
+%09%09
 case d: Long
@@ -11045,32 +11045,26 @@
  =%3E Some(d)%0A
-        
+%09%09
 case _ =%3E No
@@ -11066,34 +11066,25 @@
 =%3E None%0A
-   
+%09
   
- 
 %7D%0A
-    %7D%0A    
+%09%7D%0A%09
 private 
@@ -11132,36 +11132,83 @@
 %7D%0A  
-val Long: LongManifest = new
+private object LongManifest extends LongManifest%0A  def Long: LongManifest =
  Lon
@@ -11236,38 +11236,32 @@
 ersionUID(1L)%0A  
-final 
 private%5Breflect%5D
@@ -11324,28 +11324,25 @@
 (%22Float%22) %7B%0A
-    
+%09
 def runtimeC
@@ -11365,28 +11365,25 @@
 .Float.TYPE%0A
-    
+%09
 @inline over
@@ -11440,36 +11440,33 @@
 ray%5BFloat%5D(len)%0A
-    
+%09
 override def new
@@ -11543,36 +11543,33 @@
 ay%5BFloat%5D(len))%0A
-    
+%09
 override def new
@@ -11629,28 +11629,25 @@
 r.ofFloat()%0A
-    
+%09
 override def
@@ -11678,28 +11678,25 @@
 %5BFloat%5D = %7B%0A
-    
+%09
   x match %7B%0A
@@ -11691,32 +11691,26 @@
   x match %7B%0A
-        
+%09%09
 case d: Floa
@@ -11718,32 +11718,26 @@
  =%3E Some(d)%0A
-        
+%09%09
 case _ =%3E No
@@ -11739,34 +11739,25 @@
 =%3E None%0A
-      %7D%0A    %7D%0A    
+%09  %7D%0A%09%7D%0A%09
 private 
@@ -11802,19 +11802,72 @@
 t%0A  %7D%0A  
-val
+private object FloatManifest extends FloatManifest%0A  def
  Float: 
@@ -11881,20 +11881,16 @@
 nifest =
- new
  FloatMa
@@ -11915,38 +11915,32 @@
 ersionUID(1L)%0A  
-final 
 private%5Breflect%5D
@@ -12006,28 +12006,25 @@
 %22Double%22) %7B%0A
-    
+%09
 def runtimeC
@@ -12048,28 +12048,25 @@
 Double.TYPE%0A
-    
+%09
 @inline over
@@ -12129,28 +12129,25 @@
 ouble%5D(len)%0A
-    
+%09
 override def
@@ -12231,36 +12231,33 @@
 y%5BDouble%5D(len))%0A
-    
+%09
 override def new
@@ -12324,20 +12324,17 @@
 uble()%0A%0A
-    
+%09
 override
@@ -12370,28 +12370,25 @@
 Double%5D = %7B%0A
-    
+%09
   x match %7B%0A
@@ -12383,32 +12383,26 @@
   x match %7B%0A
-        
+%09%09
 case d: Doub
@@ -12411,32 +12411,26 @@
  =%3E Some(d)%0A
-        
+%09%09
 case _ =%3E No
@@ -12432,34 +12432,25 @@
 =%3E None%0A
-      %7D%0A    %7D%0A    
+%09  %7D%0A%09%7D%0A%09
 private 
@@ -12500,40 +12500,91 @@
 %7D%0A  
-val Double: DoubleManifest = new
+private object DoubleManifest extends DoubleManifest%0A  def Double: DoubleManifest =
  Dou
@@ -12614,38 +12614,32 @@
 ersionUID(1L)%0A  
-final 
 private%5Breflect%5D
@@ -12708,28 +12708,25 @@
 Boolean%22) %7B%0A
-    
+%09
 def runtimeC
@@ -12751,28 +12751,25 @@
 oolean.TYPE%0A
-    
+%09
 @inline over
@@ -12834,28 +12834,25 @@
 olean%5D(len)%0A
-    
+%09
 override def
@@ -12939,36 +12939,33 @@
 %5BBoolean%5D(len))%0A
-    
+%09
 override def new
@@ -13033,20 +13033,17 @@
 olean()%0A
-    
+%09
 override
@@ -13080,28 +13080,25 @@
 oolean%5D = %7B%0A
-    
+%09
   x match %7B%0A
@@ -13093,32 +13093,26 @@
   x match %7B%0A
-        
+%09%09
 case d: Bool
@@ -13122,32 +13122,26 @@
  =%3E Some(d)%0A
-        
+%09%09
 case _ =%3E No
@@ -13143,34 +13143,25 @@
 =%3E None%0A
-      %7D%0A    %7D%0A    
+%09  %7D%0A%09%7D%0A%09
 private 
@@ -13208,19 +13208,76 @@
 n%0A  %7D%0A  
-val
+private object BooleanManifest extends BooleanManifest%0A  def
  Boolean
@@ -13295,20 +13295,16 @@
 nifest =
- new
  Boolean
@@ -13335,30 +13335,24 @@
 onUID(1L)%0A  
-final 
 private%5Brefl
@@ -13420,20 +13420,17 @@
 nit%22) %7B%0A
-    
+%09
 def runt
@@ -13460,20 +13460,17 @@
 id.TYPE%0A
-    
+%09
 @inline 
@@ -13529,36 +13529,33 @@
 rray%5BUnit%5D(len)%0A
-    
+%09
 override def new
@@ -13637,20 +13637,17 @@
 %5D(len))%0A
-    
+%09
 override
@@ -13717,20 +13717,17 @@
 fUnit()%0A
-    
+%09
 override
@@ -13788,20 +13788,17 @@
 y%5BT%5D%5D =%0A
-    
+%09
   if (tp
@@ -13885,20 +13885,17 @@
 ay%5BT%5D%5D%5D%0A
-    
+%09
   else s
@@ -13914,20 +13914,17 @@
 ass(tp)%0A
-    
+%09
 override
@@ -13962,20 +13962,17 @@
 it%5D = %7B%0A
-    
+%09
   x matc
@@ -13975,24 +13975,18 @@
 match %7B%0A
-        
+%09%09
 case d: 
@@ -14001,24 +14001,18 @@
 Some(d)%0A
-        
+%09%09
 case _ =
@@ -14022,26 +14022,17 @@
 one%0A
-      %7D%0A    %7D%0A    
+%09  %7D%0A%09%7D%0A%09
 priv
@@ -14084,17 +14084,22 @@
 %7D%0A  
-val Unit:
+private object
  Uni
@@ -14108,21 +14108,23 @@
 anifest 
-= new
+extends
  UnitMan
@@ -14133,226 +14133,50 @@
 est%0A
-%0A
   
-private%5Bthis%5D val ObjectTYPE = classOf%5Bjava.lang.Object%5D%0A  private%5Bthis%5D val NothingTYPE = classOf%5Bscala.runtime.Nothing$%5D%0A  private%5Bthis%5D val NullTYPE = classOf%5Bscala.runtime.Null$%5D%0A%0A  @SerialVersionUID(1L)%0A  final
+def Unit: UnitManifest = UnitManifest%0A%0A 
  pri
@@ -14176,29 +14176,30 @@
 %0A%0A  private 
-class
+object
  AnyManifest
@@ -14234,26 +14234,41 @@
 la.Any%5D(
+classOf%5Bjava.lang.
 Object
-TYPE
+%5D
 , %22Any%22)
@@ -14266,28 +14266,80 @@
 %5D, %22Any%22) %7B%0A
-    
+%09override def runtimeClass = classOf%5Bjava.lang.Object%5D%0A%09
 override def
@@ -14382,28 +14382,25 @@
 a.Any%5D(len)%0A
-    
+%09
 override def
@@ -14454,20 +14454,17 @@
 q this)%0A
-    
+%09
 private 
@@ -14503,27 +14503,27 @@
 t.Any%0A  %7D%0A  
-val
+def
  Any: Manife
@@ -14537,20 +14537,16 @@
 a.Any%5D =
- new
  AnyMani
@@ -14557,46 +14557,16 @@
 %0A%0A  
-@SerialVersionUID(1L)%0A  final 
 private 
 clas
@@ -14561,21 +14561,22 @@
 private 
-class
+object
  ObjectM
@@ -14625,26 +14625,41 @@
 Object%5D(
+classOf%5Bjava.lang.
 Object
-TYPE
+%5D
 , %22Objec
@@ -14660,28 +14660,80 @@
 %22Object%22) %7B%0A
-    
+%09override def runtimeClass = classOf%5Bjava.lang.Object%5D%0A%09
 override def
@@ -14783,28 +14783,25 @@
 bject%5D(len)%0A
-    
+%09
 override def
@@ -14864,36 +14864,33 @@
 %7C (that eq Any)%0A
-    
+%09
 private def read
@@ -14928,19 +14928,19 @@
 t%0A  %7D%0A  
-val
+def
  Object:
@@ -14968,20 +14968,16 @@
 bject%5D =
- new
  ObjectM
@@ -14987,19 +14987,19 @@
 fest%0A%0A  
-val
+def
  AnyRef:
@@ -15075,46 +15075,16 @@
 %0A%0A  
-@SerialVersionUID(1L)%0A  final 
 private 
 clas
@@ -15083,27 +15083,21 @@
 ate 
-class
+object
  AnyVal
-Phantom
 Mani
@@ -15143,18 +15143,33 @@
 al%5D(
+classOf%5Bjava.lang.
 Object
-TYPE
+%5D
 , %22A
@@ -15174,28 +15174,80 @@
 %22AnyVal%22) %7B%0A
-    
+%09override def runtimeClass = classOf%5Bjava.lang.Object%5D%0A%09
 override def
@@ -15289,36 +15289,33 @@
 la.AnyVal%5D(len)%0A
-    
+%09
 override def %3C:%3C
@@ -15382,20 +15382,17 @@
 eq Any)%0A
-    
+%09
 private 
@@ -15438,19 +15438,19 @@
 l%0A  %7D%0A  
-val
+def
  AnyVal:
@@ -15478,26 +15478,15 @@
 l%5D =
- new
  AnyVal
-Phantom
 Mani
@@ -15497,46 +15497,16 @@
 %0A%0A  
-@SerialVersionUID(1L)%0A  final 
 private 
 clas
@@ -15501,21 +15501,22 @@
 private 
-class
+object
  NullMan
@@ -15561,32 +15561,107 @@
 ll%5D(
-NullTYPE, %22Null%22) %7B%0A    
+classOf%5Bscala.runtime.Null$%5D, %22Null%22) %7B%0A%09override def runtimeClass = classOf%5Bscala.runtime.Null$%5D%0A%09
 over
@@ -15713,28 +15713,25 @@
 .Null%5D(len)%0A
-    
+%09
 override def
@@ -15770,20 +15770,17 @@
 olean =%0A
-    
+%09
   (that 
@@ -15831,20 +15831,17 @@
 AnyVal)%0A
-    
+%09
 private 
@@ -15885,19 +15885,19 @@
 l%0A  %7D%0A  
-val
+def
  Null: M
@@ -15917,20 +15917,16 @@
 .Null%5D =
- new
  NullMan
@@ -15938,46 +15938,16 @@
 %0A%0A  
-@SerialVersionUID(1L)%0A  final 
 private 
 clas
@@ -15942,21 +15942,22 @@
 private 
-class
+object
  Nothing
@@ -16008,19 +16008,39 @@
 ng%5D(
+classOf%5Bscala.runtime.
 Nothing
-TYPE
+$%5D
 , %22N
@@ -16046,28 +16046,86 @@
 Nothing%22) %7B%0A
-    
+%09override def runtimeClass = classOf%5Bscala.runtime.Nothing$%5D%0A%09
 override def
@@ -16176,20 +16176,17 @@
 g%5D(len)%0A
-    
+%09
 override
@@ -16244,20 +16244,17 @@
 e null)%0A
-    
+%09
 private 
@@ -16301,19 +16301,19 @@
 g%0A  %7D%0A  
-val
+def
  Nothing
@@ -16339,20 +16339,16 @@
 thing%5D =
- new
  Nothing
@@ -16387,14 +16387,8 @@
 )%0A  
-final 
 priv
@@ -16469,20 +16469,17 @@
 st%5BT%5D %7B%0A
-    
+%09
 lazy val
@@ -16505,28 +16505,25 @@
 ue.getClass%0A
-    
+%09
 override laz
@@ -16680,28 +16680,25 @@
 nifest%5BT%5D =%0A
-    
+%09
 new Singleto
@@ -16783,33 +16783,32 @@
 e %60clazz%60 is%0A   
- 
 * a top-level or
@@ -16822,17 +16822,16 @@
  class.%0A
- 
    * @no
@@ -16886,25 +16886,24 @@
  because we%0A
- 
    *       i
@@ -16953,25 +16953,24 @@
 f. If we%0A   
- 
 *       pass
@@ -17038,17 +17038,16 @@
 call%0A   
- 
 *       
@@ -17111,17 +17111,16 @@
 icient)%0A
- 
    */%0A  
@@ -17167,36 +17167,33 @@
 : Manifest%5BT%5D =%0A
-    
+%09
 new ClassTypeMan
@@ -17275,33 +17275,32 @@
 e %60clazz%60 is%0A   
- 
 * a top-level or
@@ -17438,36 +17438,33 @@
 : Manifest%5BT%5D =%0A
-    
+%09
 new ClassTypeMan
@@ -17572,25 +17572,24 @@
 lazz%60 is%0A   
- 
 * a class wi
@@ -17651,17 +17651,16 @@
 %60args%60.%0A
- 
    */%0A  
@@ -17752,28 +17752,25 @@
 nifest%5BT%5D =%0A
-    
+%09
 new ClassTyp
@@ -17921,52 +17921,9 @@
 _%5D,%0A
-                                            
+%09
 over
@@ -18006,20 +18006,17 @@
  Nil) %7B%0A
-    
+%09
 override
@@ -18083,20 +18083,17 @@
 AnyRef%5D%0A
-    
+%09
 @transie
@@ -18095,20 +18095,17 @@
 ansient%0A
-    
+%09
 override
@@ -18224,17 +18224,16 @@
 %60 is%0A   
- 
 * a top-
@@ -18352,49 +18352,9 @@
 %5D%5D,%0A
-                                     val 
+%09
 runt
@@ -18353,32 +18353,33 @@
 %5D,%0A%09runtimeClass
+1
 : Predef.Class%5B_
@@ -18385,45 +18385,9 @@
 _%5D,%0A
-                                     
+%09
 over
@@ -18451,20 +18451,68 @@
 st%5BT%5D %7B%0A
-    
+%09def runtimeClass: Predef.Class%5B_%5D = runtimeClass1%0A%09
 override
@@ -18527,22 +18527,19 @@
 tring =%0A
-   
+%09
   
- 
 (if (pre
@@ -18586,22 +18586,18 @@
 +%22#%22) +%0A
-      
+%09%09
 (if (run
@@ -18652,22 +18652,18 @@
 Name) +%0A
-      
+%09%09
 argStrin
@@ -18664,17 +18664,16 @@
 gString%0A
- 
   %7D%0A%0A  d
@@ -18728,20 +18728,17 @@
 y%5BT%5D%5D =%0A
-    
+%09
 arg.asIn
@@ -18957,36 +18957,33 @@
 s Manifest%5BT%5D %7B%0A
-    
+%09
 def runtimeClass
@@ -18996,20 +18996,17 @@
 erBound%0A
-    
+%09
 override
@@ -19038,20 +19038,17 @@
 .toList%0A
-    
+%09
 override
@@ -19180,17 +19180,16 @@
  not%0A   
- 
 * strict
@@ -19247,17 +19247,16 @@
  It was%0A
- 
    * add
@@ -19432,28 +19432,25 @@
 nifest%5BT%5D =%0A
-    
+%09
 new Abstract
@@ -19630,20 +19630,17 @@
 st%5BT%5D %7B%0A
-    
+%09
 def runt
@@ -19666,36 +19666,33 @@
 nd.runtimeClass%0A
-    
+%09
 override def toS
@@ -19703,20 +19703,17 @@
 g =%0A
-    
+%09
   %22_%22 +%0A
     
@@ -19708,24 +19708,18 @@
   %22_%22 +%0A
-        
+%09%09
 (if (low
@@ -19767,24 +19767,18 @@
 ound) +%0A
-        
+%09%09
 (if (upp
@@ -19901,17 +19901,16 @@
 ial.%0A   
- 
 */%0A  def
@@ -19987,28 +19987,25 @@
 nifest%5BT%5D =%0A
-    
+%09
 new Wildcard
@@ -20160,20 +20160,17 @@
 st%5BT%5D %7B%0A
-    
+%09
 // We us
@@ -20267,20 +20267,17 @@
 ization%0A
-    
+%09
 // which
@@ -20349,20 +20349,17 @@
 eption.%0A
-    
+%09
 def runt
@@ -20393,20 +20393,17 @@
 meClass%0A
-    
+%09
 override
@@ -20595,20 +20595,17 @@
 st%5BT%5D =%0A
-    
+%09
 new Inte
